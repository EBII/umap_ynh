#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

source .fonctions	# Loads the generic functions usually used in the script
source /usr/share/yunohost/helpers # Source app helpers

CLEAN_SETUP () {
	# Clean installation residues that are not supported by the remove script.
	# Clean hosts
	echo ""
}
TRAP_ON	# Active trap to stop the script if an error is detected.

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
language=$YNH_APP_ARG_LANGUAGE
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

# Check variable is not empty
CHECK_VAR "$app" "app name not set"

CHECK_USER "$admin"	# Check username

CHECK_PATH	# Check and fixed path.
CHECK_DOMAINPATH	# Check disponibility for path and domain.

CHECK_FINALPATH	# Chech destination directory is not exist.

#Â Save app settings
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app language $language
ynh_app_setting_set $app is_public $is_public

# Install dependency to convert tracks to a readable format for the browser
ynh_package_update
ynh_package_install postgresql postgresql-server-dev-9.4 postgis python-pip git python-virtualenv virtualenvwrapper python3-dev python3-setuptools libtiff5-dev libjpeg62-turbo-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk python3.4-dev python-dev python-imaging

# Prepare Umap to be installed
sudo mkdir -p /opt/$app
sudo useradd -N $app -d /opt/$app/

#Create a postgresql database & superuser
ynh_psql_create_db $app $app

# Activate PostGIS extension
ynh_psql_create_extension postgis

# Create role root & umap
ynh_psql_create_role root

sudo mkdir -p $final_path/venv
sudo chown -R umap: $final_path

# Installation de "umap"
sudo su $app -c "virtualenv -p /usr/bin/python3 --distribute --no-site-packages ${final_path}/venv"
sudo bash -c "source ${final_path}/venv/bin/activate && pip3 install umap-project && pip3 install uwsgi"

sudo bash -c "source ${final_path}/venv/bin/activate && wget https://raw.githubusercontent.com/umap-project/umap/master/umap/settings/local.py.sample -O ${final_path}/venv/local.py"

# Replace variables configuration 
secret=$(ynh_string_random 24)
language="$(echo $language | head -c 2)"
sudo sed -i "s@You@$admin@g" "${final_path}/venv/local.py"
sudo sed -i "s@your\@email@$admin\@$domain@g" "${final_path}/venv/local.py"
sudo sed -i "s@SECRET_KEY = '!!change me!!'@SECRET_KEY = '${secret}'@g" "${final_path}/venv/local.py"
sudo sed -i "s@STATIC_ROOT = '/home/srv/var/static'@STATIC_ROOT = '${final_path}/static'@g" "${final_path}/venv/local.py"
sudo sed -i "s@MEDIA_ROOT = '/home/srv/umap/var/data'@MEDIA_ROOT = '${final_path}/data'@g" "${final_path}/venv/local.py"
sudo sed -i "s@UMAP_DEMO_SITE = True@UMAP_DEMO_SITE = False@g" "${final_path}/venv/local.py"
sudo sed -i "s@LANGUAGE_CODE = 'en'@LANGUAGE_CODE = '${language}'@g" "${final_path}/venv/local.py"

# Create STATIC & MEDIA dir
sudo mkdir "${final_path}/static"
sudo mkdir "${final_path}/data"

# export env
# sudo bash -c "source ${final_path}/venv/bin/activate && env = UMAP_SETTINGS=${final_path}/venv/local.py"

# Install umap
sudo bash -c "source ${final_path}/venv/bin/activate && export UMAP_SETTINGS=${final_path}/venv/local.py && umap migrate && echo yes | umap collectstatic && umap storagei18n"
# Create superuser
sudo bash -c "source ${final_path}/venv/bin/activate && export UMAP_SETTINGS=${final_path}/venv/local.py && umap createsuperuser --username ${admin} --email ${admin}@${domain} --noinput"

# Copy Files
sudo cp ../conf/uwsgi_params $final_path/uwsgi_params
sudo cp ../conf/uwsgi.ini $final_path/uwsgi.ini
sudo sed -i "s@__APP__@$app@g" $final_path/uwsgi.ini

# Config service
sudo ln -s $final_path/uwsgi.ini /etc/uwsgi/apps-enabled/umap.uwsgi.ini

# Start service
sudo systemctl enable uwsgi
sudo systemctl restart uwsgi

# Add umap.uwsgi as a service
sudo yunohost service add umap.uwsgi

# Modify Nginx configuration file and copy it to Nginx conf directory
ynh_nginx_config

if [ "$is_public" = "No" ];
then
	# Delete public access
	ynh_app_setting_delete $app unprotected_uris
	sudo yunohost app ssowatconf
fi

sudo systemctl reload nginx